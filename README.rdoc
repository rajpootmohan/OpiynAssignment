## Opiyn Backend Assignment

Imagine a backend system with two models - Item and Review. Item is any object which can be reviewed. Each item in the backend can have many reviews.
Design a backend  with the following api endpoints:

* (/items [with pagination query parameters]) Fetch top Items in database based on number of reviews. The results should be paginated.
       
* (/items/{itemId})Fetch full details of an Individual Item - includes latest 10 reviews only

Individual Item JSON Structure
```
{
  "id":"c5e18c83-96d8-4a1f-a446-d6bf8a178ec7",
  "title":"Cafe Coffee Day",
  "image_url": "https://opiyn.s3.amazonaws.com/2016/05/17/07/25/13/880/file.",
  "counters": {
    reviews: "createdAt",
   },
  "27": "2016-05-17T10:06:30.577Z",
  "reviews":[
    {
      "id": "48c5b3ec-5db1-4ca0-9a62-55f6bfea6b61",
      "content": "great cofee.",
      "createdAt": "2016-05-17T10:06:30.577Z"
    },{
      "id": "48c5b3ec-5db1-4ca0-9a62-55f6bfea6b61",
      "content": "cool place for business meetings",
      "createdAt": "2016-05-17T10:06:30.577Z"
    },...
  ]
}
```

Individual Review JSON Structure
```
{
      "id": "48c5b3ec-5db1-4ca0-9a62-55f6bfea6b61",
      "content": "one of the most fun-to-drive Honda cars",
      "createdAt": "2016-05-17T10:06:30.577Z"
    }
```

Some of the URLs for fetching data are :
http://localhost:3000/items.json?page=1&page_size=5
http://localhost:3000/items.json
http://localhost:3000/items/c5e18c83-96d8-4a1f-a446-d6bf8a178ec76.json

